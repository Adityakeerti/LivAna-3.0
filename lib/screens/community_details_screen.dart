import 'package:flutter/material.dart';
import '../models/community.dart';
import '../models/forum_post.dart';
import '../services/forum_service.dart';
import '../widgets/forum_post_card.dart';

class CommunityDetailsScreen extends StatefulWidget {
  final Community community;

  const CommunityDetailsScreen({
    Key? key,
    required this.community,
  }) : super(key: key);

  @override
  _CommunityDetailsScreenState createState() => _CommunityDetailsScreenState();
}

class _CommunityDetailsScreenState extends State<CommunityDetailsScreen> with SingleTickerProviderStateMixin {
  late TabController _tabController;
  final ForumService _forumService = ForumService();
  final TextEditingController _postController = TextEditingController();
  bool _isCreatingPost = false;

  @override
  void initState() {
    super.initState();
    _tabController = TabController(length: 2, vsync: this);
  }

  @override
  void dispose() {
    _tabController.dispose();
    _postController.dispose();
    super.dispose();
  }

  Future<void> _createPost() async {
    if (_postController.text.trim().isEmpty) return;

    final post = ForumPost(
      id: '', // Will be generated by Firestore
      title: 'New Post', // You can make this editable if needed
      content: _postController.text,
      authorId: 'currentUserId', // TODO: Replace with actual user ID
      authorName: 'Current User', // TODO: Replace with actual user name
      authorAvatar: 'https://example.com/avatar.jpg', // TODO: Replace with actual avatar URL
      communityId: widget.community.id,
      tags: [],
      likes: 0,
      likedBy: [],
      createdAt: DateTime.now(),
      updatedAt: DateTime.now(),
    );

    await _forumService.createPost(post);
    setState(() {
      _isCreatingPost = false;
      _postController.clear();
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(widget.community.name),
        backgroundColor: Colors.deepPurple,
        bottom: TabBar(
          controller: _tabController,
          tabs: const [
            Tab(text: 'Posts'),
            Tab(text: 'Group Chat'),
          ],
          indicatorColor: Colors.white,
          labelColor: Colors.white,
          unselectedLabelColor: Colors.white70,
        ),
      ),
      body: TabBarView(
        controller: _tabController,
        children: [
          // Posts Tab
          Column(
            children: [
              if (_isCreatingPost)
                Padding(
                  padding: const EdgeInsets.all(16.0),
                  child: Column(
                    children: [
                      TextField(
                        controller: _postController,
                        maxLines: 3,
                        decoration: InputDecoration(
                          hintText: 'Write your post...',
                          border: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(12),
                          ),
                          filled: true,
                          fillColor: Colors.grey[100],
                        ),
                      ),
                      const SizedBox(height: 8),
                      Row(
                        mainAxisAlignment: MainAxisAlignment.end,
                        children: [
                          TextButton(
                            onPressed: () {
                              setState(() {
                                _isCreatingPost = false;
                                _postController.clear();
                              });
                            },
                            child: const Text('Cancel'),
                          ),
                          const SizedBox(width: 8),
                          ElevatedButton(
                            onPressed: _createPost,
                            style: ElevatedButton.styleFrom(
                              backgroundColor: Colors.deepPurple,
                            ),
                            child: const Text('Post'),
                          ),
                        ],
                      ),
                    ],
                  ),
                ),
              Expanded(
                child: StreamBuilder<List<ForumPost>>(
                  stream: _forumService.getCommunityPosts(widget.community.id),
                  builder: (context, snapshot) {
                    if (snapshot.connectionState == ConnectionState.waiting) {
                      return const Center(child: CircularProgressIndicator());
                    }

                    if (snapshot.hasError) {
                      return Center(child: Text('Error: ${snapshot.error}'));
                    }

                    final posts = snapshot.data ?? [];

                    if (posts.isEmpty) {
                      return const Center(
                        child: Text(
                          'No posts yet. Be the first to start a discussion!',
                          style: TextStyle(fontSize: 16),
                        ),
                      );
                    }

                    return ListView.builder(
                      padding: const EdgeInsets.all(16),
                      itemCount: posts.length,
                      itemBuilder: (context, index) {
                        return ForumPostCard(
                          post: posts[index],
                          onLike: (isLiked) {
                            // TODO: Implement like functionality
                          },
                          onComment: () {
                            // TODO: Implement comment functionality
                          },
                        );
                      },
                    );
                  },
                ),
              ),
            ],
          ),
          // Group Chat Tab
          Center(
            child: Column(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                const Icon(
                  Icons.chat,
                  size: 48,
                  color: Colors.deepPurple,
                ),
                const SizedBox(height: 16),
                const Text(
                  'Group Chat',
                  style: TextStyle(
                    fontSize: 20,
                    fontWeight: FontWeight.bold,
                  ),
                ),
                const SizedBox(height: 8),
                Text(
                  'Chat with members of ${widget.community.name}',
                  style: const TextStyle(
                    color: Colors.grey,
                  ),
                ),
              ],
            ),
          ),
        ],
      ),
      floatingActionButton: _tabController.index == 0
          ? FloatingActionButton(
              onPressed: () {
                setState(() {
                  _isCreatingPost = true;
                });
              },
              backgroundColor: Colors.deepPurple,
              child: const Icon(Icons.add, color: Colors.white),
            )
          : null,
    );
  }
} 